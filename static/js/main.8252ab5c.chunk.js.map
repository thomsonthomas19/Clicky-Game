{"version":3,"sources":["components/FighterCard/index.js","components/Wrapper/index.js","components/ScoreCard/index.js","App.js","index.js"],"names":["FighterCard","props","react_default","a","createElement","className","value","id","onClick","clickEvent","alt","name","src","image","Wrapper","children","ScoreCard","title","curScore","msg","highScore","App","state","fighters","clicked","shuffleArray","array","i","length","j","Math","floor","random","temp","shuffleFighters","shuffledFighters","_this","setState","raiseScore","newScore","guessedCorrectly","updatedFighters","map","fighter","console","log","resetBoard","fighterList","document","body","scrollTop","documentElement","_this2","this","components_ScoreCard","components_Wrapper","components_FighterCard","key","Component","ReactDOM","render","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.8252ab5c.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction FighterCard(props) {\n  return (\n    <div\n      className=\"card\"\n      value={props.id}\n    >\n      <div className=\"img-container\"\n        value={props.id}\n        onClick={() => props.clickEvent(props.id)}>\n        <img alt={props.name} src={props.image} />\n      </div>\n    </div>\n  );\n}\n\nexport default FighterCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction ScoreCard(props) {\n\n  return (\n  <div className = \"scorecard\">\n        <h1\n        className = \"text-center\">{props.title}</h1>\n        <br/>\n    <div\n    className = \"row\">\n\n      <h3 className = \"col-4 text-center\">Current Score: {props.curScore} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</h3>\n\n      <h3 className = \"col-4 text-center\" id=\"rw\">{props.msg}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</h3>\n\n      <h3 className = \"col-4 text-center\">High Score: {props.highScore}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</h3>\n    </div>\n  </div>\n);\n }\n\nexport default ScoreCard;","import React, { Component } from \"react\";\nimport FighterCard from \"./components/FighterCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport ScoreCard from \"./components/ScoreCard\";\nimport fighters from \"./fighters.json\";\nimport \"./App.css\";\n\n\n\nclass App extends Component {\n\n  // create state obj\n  state = {\n    fighters,\n    curScore: 0,\n    highScore: 0,\n    msg: \"Choose your fighters!\",\n    clicked: []\n  };\n\n  \n  shuffleArray = (array) => {\n    for (let i = array.length - 1; i > 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1));\n      let temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n    return array;\n  };\n  \n  shuffleFighters = () => {\n    let shuffledFighters = this.shuffleArray(fighters);\n    this.setState({ fighters: shuffledFighters });\n  };\n  \n  raiseScore = () => {\n    const newScore = this.state.curScore + 1;\n    this.setState({\n      curScore: newScore,\n      msg: \"\"\n    });\n    this.setState({ msg: \"Good One!\" });\n    if (newScore >= this.state.highScore) {\n      this.setState({ highScore: newScore });\n    }\n    this.shuffleFighters();\n  };\n  \n  clickEvent = id => {\n    var guessedCorrectly = null;\n    // console.log(this.state.fighters);\n    const updatedFighters = this.state.fighters.map(fighter => {\n      console.log(guessedCorrectly);\n      if (fighter.id === id && !fighter.clicked) {\n          fighter.clicked = true;\n          guessedCorrectly = true;\n        } else {\n          // guessedCorrectly = false;\n        }\n      return fighter;\n\n    })\n    // console.log(updatedFighters);\n    // const updatedFighters = this.state.fighters.map(fighter => {\n    //   if (fighter.id == id) {\n    //     if (!fighter.clicked) {\n    //       fighter.clicked = true;\n    //       guessedCorrectly = true;\n    //     }\n    //   }\n    // })\n    console.log(guessedCorrectly, \"final guess\");\n    (guessedCorrectly) ?\n    this.raiseScore(updatedFighters) :\n    this.resetBoard(updatedFighters)\n    // if (this.state.clicked.indexOf(id) === -1) {\n    //   this.raiseScore();\n    //   this.setState({ clicked: this.state.clicked.concat(id) });\n    // } else {\n    //   this.resetBoard();\n    // }\n  };\n  \n  resetBoard = (fighterList) => {\n    const resetFighterList = fighterList.map(fighter => {\n      fighter.clicked = false;\n      return fighter;\n    })\n    this.setState({\n      curScore: 0,\n      highScore: this.state.highScore,\n      msg: \"Better luck next time\",\n      clicked: []\n    });\n    document.body.scrollTop = document.documentElement.scrollTop = 0;\n    this.shuffleFighters();\n  };\n  \n  \n  render() {\n    return (\n      <div>\n      <ScoreCard\n      title=\"Smash Fighters Click Game\"\n      curScore={this.state.curScore}\n      highScore={this.state.highScore}\n      msg={this.state.msg}\n      />\n      <Wrapper>\n        {this.state.fighters.map(fighter => {\n          return (\n            <FighterCard\n            id={fighter.id}\n            key={fighter.id}\n            name={fighter.name}\n            image={fighter.image}\n            clickEvent={this.clickEvent}\n            raiseScore={this.raiseScore}\n            resetBoard={this.resetBoard}\n            shuffleFighters={this.shuffleFighters}\n            \n            />\n            )\n          })}\n      </Wrapper>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n// handleRemovefighter = (id) => {\n//   // use array filter to create new array of fighters with all fighters WITHOUT that id\n//   const newfighters = this.state.fighters.filter(fighter => fighter.id !== id);\n\n//   // use this.setState to update this.state.fighters and rerender the cards\n//   this.setState({\n//     fighters: newfighters\n//   })\n// }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n"],"sourceRoot":""}